import torch

x = torch.tensor([
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 0, 156, 4],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [3, 0, 146, 11],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 159, 1, 0],
        [4, 12, 144, 0],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 25, 135, 0],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 0, 159, 1],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 0, 157, 3],
        [0, 0, 0, 160]
    ],
    [
        [159, 1, 0, 0],
        [0, 159, 0, 1],
        [0, 160, 0, 0],
        [0, 0, 146, 14],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 0, 144, 16],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 0, 154, 6],
        [0, 0, 0, 160]
    ],
    [
        [160, 0, 0, 0],
        [0, 160, 0, 0],
        [0, 160, 0, 0],
        [0, 13, 147, 0],
        [0, 0, 0, 160]
    ]
], dtype=torch.float)

x /= 160

mu = x.mean(dim=0)*100
std = x.std(dim=0)*100

for i in range(5):
    for j in range(4):
        print("%.1f $\\pm$ %.1f &" % (mu[i, j], std[i, j]), end=" ")
    print("\\\\")
